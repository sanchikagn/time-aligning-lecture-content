text,15809,24448,Name of this course is theory of computation and let us spend a little time to understand
text,24449,33370,the scope of this course. Now we have the word computation in the title and it is saying
text,33370,42349,that ever course is what the theory of this entity called computation. Now when we talk
text,42350,51330,of computation today clearly what we understand as computation is that you write some programs
text,51330,59750,and you run the programs and computers and then in that way you carry out a computation.
text,59750,68490,So fundamental activity behind computation or the way computation is carried out by executing
text,68490,75710,programs so what are programs Let me let me write this term which we are all familiar
text,75710,90380,with programs and anyway we can see that our theory is about programs right. There can be
text,90380,99199,various theories I need to now say clearly specifically what we mean by our theory that
text,99200,100310,we will discuss here.
text,100310,109740,But again if we think of the word program we know there is something fundamental behind
text,109740,119548,this term even more fundamental because after all a program is nothing but nothing but an
text,119549,134620,algorithm expressed in a programming language. So we can say programs expressed algorithms
text,134620,149400,and you see already we are making an abstraction in this that we are saying that programs express
text,149400,158970,algorithms so more fundamental notion then programs is the notion of an algorithm.
text,158970,166780,So going back again what we can see that our theory is about theory of algorithms right.
text,166780,173790,Theory of computation theory of programs theory of algorithms all more or less denote the
text,173790,185920,same thing in our context. What are algorithms? For We all know that but let us let us let
text,185920,197720,us annunciate clearly we know that algorithm what it does is it computes or it gives us
text,197720,202930,a recipe for computing and input output transformation.
text,202930,238520,So let us again write this an algorithm is a recipe for carrying out input to output
text,238520,254689,transformation this seems obvious enough that when I have a program it is executing an algorithm
text,254689,263190,and what is that algorithm? That algorithm is an finite effective stepbystep process
text,263190,270410,or description of a process which we are calling a recipe more familiar term for carrying out
text,270410,275950,transformation of the given input to an output
text,275950,287280,Another way of saying this would be that an algorithm tells us how to how to compute a
text,287280,295119,function. So you see if I write like this recipe for carrying out input to output transformation.
text,295120,309460,So in picture it will be like this is an algorithm and as we know that it tells me for a given
text,309460,326370,input how to get it out but then we can see this as telling me what is the output for
text,326370,328270,let us say the input X.
text,328270,340590,If I call that output if I term that output output for X as f of x then we are we are
text,340590,348039,dealing with an even more fundamental familiar concept is that of a function right So as
text,348039,358389,you know a function f is a mapping from some domain to some range and in this case the
text,358389,365889,domain is this domain of all input and the range is the range of all outputs for a specific
text,365889,375009,function right You may have an intuitive understanding of a function right.
text,375009,383340,You may have Uhh an idea what the function should compute In other words given an X
text,383340,395280,what effect should be but that is not enough for actually obtaining given an X the value
text,395280,403929,fx for that what we say is that we have to give an algorithm to compute that function
text,403930,412479,f. So we can say that an algorithm computes a function again that is kind of very straightforward
text,412479,415990,simple understanding right
text,415990,431840,Every algorithm computes a function right. So let us write this here every algorithm
text,431840,449599,computes or I should have said tells us how to compute a function. The distinction should
text,449599,455300,be clear even algorithm and function we all understand function is an abstract notion
text,455300,467199,which tells me that here is this mapping between input and output domain and range and algorithm
text,467199,474599,is telling me how to obtain the output for a specific input right.
text,474599,488340,In other words we are using the word computes in that sense Now I can say basic basic goal
text,488340,501299,of our theory is to figure out for what functions we can have algorithms Now that might sound
text,501300,511819,a little unfamiliar we may think that if we can dream of function if we can define a function
text,511819,523740,if we can in some way tell somebody else about a function then that itself should be an algorithm
text,523740,526220,but really that is not the case.
text,526220,536010,For example let me let me provide a very simple Uhh illustration Consider this function which
text,536010,550700,is isprime right This takes a number to let us say to my domain is the set of numbers
text,550700,566010,and the range is yes or no and by that what I mean is supposing I say isprime and then
text,566010,573120,apply it on a number then it is going to be the output is going to be or the answer the
text,573120,581279,value of this function on the on the argument n is going to be either yes or no.
text,581279,588110,And now let me define when I want the answer to yes and when I want the answer to be no.
text,588110,599390,So let us see it should be yes if n is a prime the number n you have given as argument is
text,599390,617220,a prime and it should be no if n is not a prime right. So you have defined this function
text,617220,623490,but you see clearly we are not saying this definition itself is not telling me given
text,623490,632140,an n how to actually come up with the answer with the right answer and that would be as
text,632140,637300,you know and you have surely written a program to compute this function.
text,637300,649670,You will have to give an algorithm which will tell me how to give an argument n which is
text,649670,657069,a number n how to figure out whether it is a prime are not And that how to should be
text,657070,664880,expressed in terms of simple operations which can be carried out on a computer right. So
text,664880,671490,these are all we know in other words we would like to write a program to compute this much.
text,671490,679570,So you see that underline that program that algorithm is completely a function
text,679570,686011,So coming back what we what we are trying to see that it may be possible to define to
text,686011,692120,define a function but the definition of the function does not immediately point out in
text,692120,702430,all cases to an algorithm to compute that much If that is the case then at least you
text,702430,709689,can now see that there is a possibility that I may be able to define a function I may be
text,709690,721139,able to describe what the output should be without having an idea how to obtain the correct
text,721139,722139,answer.
text,722139,729899,Although you have not possibly encountered such situations in our programming experience
text,729899,739420,but it might surprise you when I tell you that actually it is a fact that for most functions
text,739420,748250,there are no algorithms to compute. In other words if you think of the class of all functions
text,748250,761139,then only a tiny fraction only a tiny subset of these functions admit algorithms to compute
text,761139,769699,them and this is something which we will be able to prove which we will be able to demonstrate
text,769699,776219,in our theory In other words let me say of a a primary goal of our theory is going to
text,776220,789680,be to figure out which functions can admit or will admit algorithms to compute them.
text,789680,801449,Basic goal of our course that we are going to go through in the series of lectures may
text,801449,810819,say as it is to identify the class of functions which admit algorithms to compute. So what
text,810820,824050,we are saying is that there are some functions which are of the kind that for function f
text,824050,844029,there is an algorithm to compute f right And there are some other
text,844029,872389,functions rest do not admit any algorithm to compute them.
text,872389,879690,In this class of functions that if you give me an input a then I will be able to tell
text,879690,889730,you by carrying out by computing the corresponding algorithm for f what the value of the function
text,889730,898079,will be on the argument a whatever be the algorithm. But in this case it may be that
text,898079,905989,for some inputs I will be able to give but there may be inputs for which I will not be
text,905990,908459,able to tell you what the output is.
text,908459,916089,In other words I will not have an algorithm in general to compute that function and as
text,916090,926120,I said that most of the functions unfortunately if you like they fall in this class that they
text,926120,932680,do not admit any algorithm to compute them.
text,932680,940520,So at the end of the course in principal you should be able to not only have examples which
text,940520,950269,are very clear and which are Uhh in a way Uhh important functions for which we will
text,950269,956160,not have any algorithm we should be able to prove that such is the case with those functions
text,956160,972870,and in principal again we will have the knowledge of the techniques to demonstrate that a function
text,972870,983500,does not admit any algorithm to compute them and that as I said to be at the very end of
text,983500,986290,this course.
text,986290,995599,Now the way we look at this problem although this is the fundamental thing this is our
text,995600,1004170,basic goal is to identify the class of functions which admit algorithms to compute them but
text,1004170,1011130,you will see in the course actually we will not talk about functions instead we will talk
text,1011130,1020500,about a problem which is kind of related and I will have to show you the relation and that
text,1020500,1030569,problem is called membership question. You know given as set and given an element whether
text,1030569,1041550,an (elem) that element is a member of that so this is a question that will engage us
text,1041550,1048329,for most of the course and let me clearly explained what that question is.
text,1048329,1055260,So let me understand let us understand what this problem is Set membership problem actually
text,1055260,1066540,very simple to state it is a very general problem that you know you have some set S
text,1066540,1086990,and our problem is that given any a as input to decide if a is a member is an element of
text,1086990,1096620,the set S so very simple right. There is a set in some way we understand what is that
text,1096620,1104320,se.t And now you give me some element a and we would like to know whether this element
text,1104320,1108280,belongs to the set S or not.
text,1108280,1117850,Now as I said all the time in this course will really be talking about this problem
text,1117850,1128550,what we will do is we will be able to show various kinds of algorithms not the way you
text,1128550,1138409,study in Uhh algorithms course but through various models of computation the classes
text,1138410,1145050,of set for which we can carry out this problem.
text,1145050,1153889,Now what is the connection between set membership problem and the basic goal that I had talked
text,1153890,1165670,of here You see if you think of functions f then remember that we said that Uhh function
text,1165670,1173840,F notationally we always write like this that a function f is a mapping from some domain
text,1173840,1185550,to some range R Now you might know that there is a very natural set which is associated
text,1185550,1197300,with any function and that is that set is called the graph of f right.
text,1197300,1210980,And that graph of f is a set and what is that set that set is a set of tuples a b such that
text,1210980,1233350,f of a is equal to b Now the point is this that with every function f the we can associate
text,1233350,1253330,such a graph and now suppose we cannot decide we cannot give an algorithm to compute or
text,1253330,1259699,to carry out or to solve the set membership problem of graph of f.
text,1259700,1286530,So let us write it down suppose we show that there is no algorithm
text,1286530,1312070,to solve the set membership problem for the set graph of f now but this
text,1312070,1319100,is a set and as we said this is this particular set is defined like this. Suppose we show that
text,1319100,1331909,there is no algorithm to solve the set number problem for the set graph of f then we can
text,1331910,1342020,conclude that there will there is no algorithm to compute
text,1342020,1358960,f also that there is no algorithm to compute f
text,1358960,1374030,So what I am saying is that if we show that there is no algorithm to solve the set membership
text,1374030,1383460,problem of graph f then there is no algorithm to compute the function f itself and this
text,1383460,1393390,is quite easy to see and Uhh we can very easily prove the equivalent contropsoitive statement
text,1393390,1403020,and which will see that if there is an algorithm to compute f then there is an algorithm to
text,1403020,1406970,solve set membership problem of graph f.
text,1406970,1419250,So if you have an algorithm to compute f right. Then if somebody gives you this tuple a b
text,1419250,1425460,now and you have an algorithm to compute f then what you can do is look at the first
text,1425460,1452180,argument and compute f of a using the algorithm for computing f let me let me write this suppose
text,1452180,1486840,there is an algorithm to compute f then for a b given as input
text,1486840,1496149,we compute f(a) using the algorithm for computing f right.
text,1496150,1503390,Somebody has given you the algorithm to compute f so you use that algorithm to compute f of
text,1503390,1514360,a a is what. The first argument of this tuple and now supposing the is f of a then of course
text,1514360,1528679,a b this implies actually b equal to f of a if and only if a b is a member of graph
text,1528680,1539940,of f right So therefore using the algorithm for computing f I can solve the set membership
text,1539940,1546110,problem the set membership problem was given ab check whether this tuple is a member of
text,1546110,1547310,graph of f.
text,1547310,1554409,This tuple is going to be a member of graph of f if and only if f(a) is equal to b and
text,1554410,1560920,now I have an algorithm to compute f and therefore clearly I take the first argument I compute
text,1560920,1569360,f of a check whether b is equal to f of a and then I can answer whether a b is a member
text,1569360,1583260,of the set graph of x. So therefore this statement we have proved it is so easy right.
text,1583260,1596240,Now if I can show therefore that there is no algorithm for computing for there is no
text,1596240,1604880,algorithm to solve the set membership problem of graph f then I have shown that there is
text,1604880,1615770,no algorithm to compute f and this is the reason you see that a function which is not
text,1615770,1624570,computable we will be able to get to that fact while looking at the graph of that function
text,1624570,1631120,and grouping that graph of f is something is a kind of set is set for which I have no
text,1631120,1634129,algorithm to solve the set membership problem.
text,1634130,1641100,Now what what does it by You know instead of functions then I can talk only about sets
text,1641100,1647199,and sets are more fundamental and in a way simpler objects and therefore the theory at
text,1647200,1660330,least notationally becomes simpler although it manages to show existence of functions
text,1660330,1670280,which for which we have no algorithms to compute those functions through the study of some
text,1670280,1677990,kind of sets and this is the reason most of the in in fact entire course will concentrate
text,1677990,1683070,on sets and their membership problem rather than functions.
text,1683070,1690379,In fact although that is the basic goal in our mind because we would like to talk about
text,1690380,1696740,programs and whether or not we can have a program to compute certain things. You will
text,1696740,1707680,see in fact that this problem is not something we tackle in its and it is generality what
text,1707680,1715490,I mean is that the kind of sets for which we will consider set membership problem the
text,1715490,1723900,sets are going to be very very special kind of sets and what are the sets for which we
text,1723900,1725591,will consider set membership problem
text,1725591,1757780,If these sets are let me write it. Our sets are going to be sets of finite strings.
text,1757780,1766730,Let me explain these terms and to talk of strings I need to first talk of alphabets
text,1766730,1781010,and to talk of alphabet I need to talk of symbols. Now so let me first use the term symbol
text,1781010,1789530,what is a symbol We are not going to define it only thing we we would like to say
text,1789530,1797889,about symbols that they are as you know them for example 0 1 these are symbols right.
text,1797890,1808730,Similarly a b these are symbols right. And what another term that we are going to use
text,1808730,1843840,is called alphabet. So an alphabet is a finite set of symbols As an example this is an alphabet
text,1843840,1852709,right. There are 2 symbols 0 and 1 the set comprising of these 2 symbols is an alphabet
text,1852710,1873400,also another example could be a b c d of the way to z and you can of course give many other
text,1873400,1885500,examples of finite sets which are made up of or which comprise of symbols.
text,1885500,1895550,And now let us just consider this set a b c to this is an alphabet because these consist
text,1895550,1905830,of it is 3 members 3 symbols a b c and again another familiar term is a string over these
text,1905830,1918189,symbols So what is a string? String is we just write an ordered way we write this symbols
text,1918190,1929840,one after another after some point So let us say b a a b c this is a string over this
text,1929840,1939240,alphabet so we can we can we can formally define all these more carefully but this notion
text,1939240,1948600,is so simple you get it immediately that this is a string in which the first symbol is b
text,1948600,1951990,second symbol is a so there is a notion of ordering.
text,1951990,1958390,We can talk of first second third fourth fifth and also there is a notion of length because
text,1958390,1968300,this has you can see its length is 5 because it has 5 symbols right. And Uhh this is also
text,1968300,1974629,a finite stream they could have been in finite strings over the same alphabet but we will
text,1974630,1982850,restrict ourselves to finite strings over an alphabet.
text,1982850,2009810,Now suppose Sigma is an alphabet then Sigma star denotes the set of all finite strings
text,2009810,2032570,over Sigma okay Now supposing my sigma 0 1 suppose as example I take Sigma is 0 1 then
text,2032570,2042689,what is Sigma star It is not difficult to see so what are the strings over this alphabet
text,2042690,2050290,they are going to be Binary strings and we said Sigma star denotes the set of all finite
text,2050290,2056599,strings over Sigma and this is the binary alphabet so therefore Sigma star in this case
text,2056599,2064090,is going to be the set of all finite binary strings.
text,2064090,2071190,So as we are saying that consider the binary alphabet which consist of just 2 symbols 0
text,2071190,2079200,and 1 in that case the Sigma star is going to be the set of all finite binary strings
text,2079199,2091230,right By this what do I mean to finite binary strings You know we do not allow in Sigma
text,2091230,2100140,star to have an infinitely long string but all strings whose lengths finite they will
text,2100140,2105450,be members of Sigma star and those are the finite binary strings.
text,2105450,2113029,So there is really no upper bound on the length of strings which we have in Sigma star but
text,2113030,2120240,at the same time every string any particular string that we take in Sigma star that has
text,2120240,2130879,a finite length is this notion clear that this is an in finite set and all its members
text,2130880,2142790,are you know are finite lengths like like set of numbers set of integers that is an
text,2142790,2147470,infinite set each integer itself is some member of finite object.
text,2147470,2152959,It is let us say 10000 it will be 100000000000 it could be 100000000 so then numbers can
text,2152960,2160540,be arbitrarily large. Similarly here the strings can be arbitrarily large but each string in
text,2160540,2168350,Sigma star is finite right. So now that is one very very important notion that we are
text,2168350,2184319,going to introduce that notion is that of the formal language. A formal language L over
text,2184320,2211820,the alphabet Sigma is subset
text,2211820,2212820,of Sigma star okay.
text,2212820,2219020,This is a formal language L over the alphabet Sigma is a subset of Sigma star right Sigma
text,2219020,2225890,star recall it has the set of all binary by binary strings over the alphabet Sigma and
text,2225890,2233839,you take some of them possibly an infinitely many of them leaving may be some
text,2233840,2247450,out is and that constitutes a formal language over the alphabet Sigma So it is clear that
text,2247450,2267660,for this alphabet for Sigma is again binary alphabet 0 1 1 1 0 0 1 01 1 1 0 101 1 1 0
text,2267660,2281589,right. This is a set of strings over the alphabet 0 1 and clearly this is a subset of this set
text,2281590,2284710,Sigma star so this is a language L.
text,2284710,2294130,So we can say that this is an example of a binary language because all its strings are
text,2294130,2303230,over the symbol 0 1 and this is of course the finite language but more interesting would
text,2303230,2315490,be the example let us say L1 which is x is in 0 1 this is an alphabet Now I am putting
text,2315490,2331609,the star over it so I mean x is a binary string such that x has even number of 0s and even
text,2331610,2345290,number of 1s. How many such strings are there clearly infinitely?
text,2345290,2357360,At the same time not all binary strings are in this language L1 so L1 is an example of
text,2357360,2369330,a language over 01 which is in finite right. But which is not the entire Sigma star So
text,2369330,2379290,this language L1 is a proper subset of we can write like this is a proper subset of
text,2379290,2387990,Sigma star So we have introduced number of terms let me just enumerate them and briefly
text,2387990,2395000,explain once more what each are each of these Uhh symbols is.
text,2395000,2415350,First of all Uhh we talked of symbols then we talked of alphabet right. Then we talked
text,2415350,2446000,of strings over an alphabet then we talked of Sigma star for alphabet Sigma and finally
text,2446000,2464830,we talked of formal language over Sigma very quickly symbols are like 0 1 these are symbols
text,2464830,2474090,alphabet is set of symbols so this is an alphabet string over an alphabet over this alphabet
text,2474090,2480600,1 1 0 101 1 this is a string right.
text,2480600,2496040,Sigma star over this alphabet is the set of all finite binary strings
text,2496040,2508170,and a formal language over this alphabet is just a subset of Sigma star L is a subset
text,2508170,2521280,of for this particular alphabet 0 1 So therefore L such a formal language is also a set which
text,2521280,2532970,which Uhh has a number of finite strings in general over the alphabet that we are dealing
text,2532970,2540160,with in this case in this example at least that alphabet was the binary alphabet.
text,2540160,2552850,Now the connection with what we were saying before is this that we shall be concerned
text,2552850,2574890,with the set membership problem
text,2574890,2587210,of formal languages So now therefore our problem is going to be somebody has some formal language
text,2587210,2598770,L in mind and the problem therefore is very concrete they give me string and I have to
text,2598770,2606000,determine whether that string is is a member of the formal language.
text,2606000,2615360,Now very briefly although we had said in terms of the graph of the function is can be seen
text,2615360,2624990,as a set but then what is the justification of talking about restricting ourselves only
text,2624990,2633540,to set membership problems of languages and that is because the idea is really very simple
text,2633540,2641290,you see when you write a program right. Then that program take some input and that input
text,2641290,2643600,is is what
text,2643600,2652069,Is actually a string because that input you have you need to key it in through a the keyboard
text,2652070,2658840,or maybe it is coming through a file whatever it is you can think of that input to be a
text,2658840,2669630,string over some alphabet and the output is again in general is of course not yes or no
text,2669630,2674320,as in the set membership problem but here we appeal what we have said earlier. Because
text,2674320,2681560,our our goal is to show that something cannot be done by programs.
text,2681560,2691130,And so if that is a function then if we can show that the corresponding graph which is
text,2691130,2700560,going to be in this case going to be basically strings you know basically graphs those graphs
text,2700560,2705950,of those functions that we are interested in since our inputs are going to be strings
text,2705950,2711100,outputs are going to be strings so these are going to a pairs of strings pairs of strings
text,2711100,2716759,themselves can be seen as a string and therefore it is really a set membership problem where
text,2716760,2722400,the sets are really sets of strings and these strings are finite strings right.
text,2722400,2729540,I mean you never or you it does not make sense to say that my input is a string which is
text,2729540,2737680,infinitely long because such a input you can never even provide to the program completely
text,2737680,2744480,for that program your program to work on that input. So inputs are always finite and in fact
text,2744480,2748800,there are always finite strings in the programming context.
text,2748800,2759560,So therefore this restriction is not Uhh something which is very restrictive right. Although it
text,2759560,2765810,seems the great restriction from functions we are coming to set membership and then again
text,2765810,2770600,we are saying that we are not interested in all kinds of sets but only sets which are
text,2770600,2782310,just sets of strings over finite alphabet. Now that really is the basic issue in this
text,2782310,2790850,course that you know ultimately of course we will be talking about you know this question
text,2790850,2795589,of whether certain set membership problem admits an algorithm or not.
text,2795590,2805500,But we will come to the will come to that goal in a series of Uhh steps if you like.
text,2805500,2812260,So what we are going to do Is we are going to do Uhh we are going to invert the problem
text,2812260,2813260,in some sense.
text,2813260,2842250,We will think in terms of models of computation let me write this down right. And that means
text,2842250,2853150,some abstract way we are seeing we will will describe a class of algorithms and the that
text,2853150,2863180,abstract we in fact going to be by specifying what are called automata. See these are again
text,2863180,2870299,terms which will be much clearer when we seebreally examples of when we deal with them.
text,2870300,2884820,So our models of computations let me just say this for the time being are automata of
text,2884820,2901780,various kinds. So it will define a class of automata and then we will ask the question
text,2901780,2913240,what kinds of set membership problem this class of automata can solve The kinds of automata
text,2913240,2914669,that we are going to see.
text,2914670,2932270,We will start with a very simple class of automata they are called finite state automata
text,2932270,2941070,Now even here there will be various crimes we will see later the deterministic not deterministic
text,2941070,2952800,and then we will study what kinds of languages for which this model of computation can solve
text,2952800,2959880,their set membership problem. After which and this is this is going to take at least you
text,2959880,2966560,know 15 to 20 lectures and then we will talk about in terms of automata it is going to
text,2966560,2971940,be pushed down automata.
text,2971940,2991560,And again Uhh we will study the classes of languages or which pushed down automata will
text,2991560,2999080,be adequate to solve their membership problems then finally we will look at the most general
text,2999080,3004029,class of automata which is possible you might have heard of this term you have heard Turing
text,3004030,3015770,machines and as we go along there will be many other things you know we will study and
text,3015770,3031030,for example we will study the notion of grammar and here the study regular grammar context
text,3031030,3035380,free grammar we will briefly mentioned what are context sensitive grammar.
text,3035380,3041619,And then finally the unrestricted grammar and there will be Uhh some correspondence
text,3041619,3052630,with these things that we are going to study and it is at this point where I said at the
text,3052630,3057800,almost when we come to the end of the course or in the last part of the course we are going
text,3057800,3067730,to encounter set membership problems for which there will be no algorithms to solve. We will
text,3067730,3076960,stop here and in the next lecture onwards will start with finite state automata
text,3076960,3080160,and we will we will be dealing with them for quite some time.